<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='customer+ (sakila)' inline='true' name='federated.11rdsm81ofn2ae18f0v031jpg9m3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0vrum281iggc5815sd6l01kz182u'>
            <connection class='mysql' dbname='sakila' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[film_category].[category_id]' />
              <expression op='[category].[category_id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[film].[film_id]' />
                <expression op='[film_category].[film_id]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[inventory].[film_id]' />
                  <expression op='[film].[film_id]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[rental].[inventory_id]' />
                    <expression op='[inventory].[inventory_id]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[city].[country_id]' />
                      <expression op='[country].[country_id]' />
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[address].[city_id]' />
                        <expression op='[city].[city_id]' />
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[customer].[address_id]' />
                          <expression op='[address].[address_id]' />
                        </expression>
                      </clause>
                      <relation join='inner' type='join'>
                        <clause type='join'>
                          <expression op='='>
                            <expression op='[payment].[rental_id]' />
                            <expression op='[rental].[rental_id]' />
                          </expression>
                        </clause>
                        <relation join='inner' type='join'>
                          <clause type='join'>
                            <expression op='='>
                              <expression op='[customer].[customer_id]' />
                              <expression op='[payment].[customer_id]' />
                            </expression>
                          </clause>
                          <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='customer' table='[customer]' type='table' />
                          <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='payment' table='[payment]' type='table' />
                        </relation>
                        <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='rental' table='[rental]' type='table' />
                      </relation>
                      <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='address' table='[address]' type='table' />
                    </relation>
                    <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='city' table='[city]' type='table' />
                  </relation>
                  <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='country' table='[country]' type='table' />
                </relation>
                <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='inventory' table='[inventory]' type='table' />
              </relation>
              <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='film' table='[film]' type='table' />
            </relation>
            <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='film_category' table='[film_category]' type='table' />
          </relation>
          <relation connection='mysql.0vrum281iggc5815sd6l01kz182u' name='category' table='[category]' type='table' />
        </relation>
        <cols>
          <map key='[active]' value='[customer].[active]' />
          <map key='[address2]' value='[address].[address2]' />
          <map key='[address]' value='[address].[address]' />
          <map key='[address_id (address)]' value='[address].[address_id]' />
          <map key='[address_id]' value='[customer].[address_id]' />
          <map key='[amount]' value='[payment].[amount]' />
          <map key='[category_id (category)]' value='[category].[category_id]' />
          <map key='[category_id]' value='[film_category].[category_id]' />
          <map key='[city]' value='[city].[city]' />
          <map key='[city_id (city)]' value='[city].[city_id]' />
          <map key='[city_id]' value='[address].[city_id]' />
          <map key='[country]' value='[country].[country]' />
          <map key='[country_id (country)]' value='[country].[country_id]' />
          <map key='[country_id]' value='[city].[country_id]' />
          <map key='[create_date]' value='[customer].[create_date]' />
          <map key='[customer_id (payment)]' value='[payment].[customer_id]' />
          <map key='[customer_id (rental)]' value='[rental].[customer_id]' />
          <map key='[customer_id]' value='[customer].[customer_id]' />
          <map key='[description]' value='[film].[description]' />
          <map key='[district]' value='[address].[district]' />
          <map key='[email]' value='[customer].[email]' />
          <map key='[film_id (film)]' value='[film].[film_id]' />
          <map key='[film_id (film_category)]' value='[film_category].[film_id]' />
          <map key='[film_id]' value='[inventory].[film_id]' />
          <map key='[first_name]' value='[customer].[first_name]' />
          <map key='[inventory_id (inventory)]' value='[inventory].[inventory_id]' />
          <map key='[inventory_id]' value='[rental].[inventory_id]' />
          <map key='[language_id]' value='[film].[language_id]' />
          <map key='[last_name]' value='[customer].[last_name]' />
          <map key='[last_update (address)]' value='[address].[last_update]' />
          <map key='[last_update (category)]' value='[category].[last_update]' />
          <map key='[last_update (city)]' value='[city].[last_update]' />
          <map key='[last_update (country)]' value='[country].[last_update]' />
          <map key='[last_update (film)]' value='[film].[last_update]' />
          <map key='[last_update (film_category)]' value='[film_category].[last_update]' />
          <map key='[last_update (inventory)]' value='[inventory].[last_update]' />
          <map key='[last_update (payment)]' value='[payment].[last_update]' />
          <map key='[last_update (rental)]' value='[rental].[last_update]' />
          <map key='[last_update]' value='[customer].[last_update]' />
          <map key='[length]' value='[film].[length]' />
          <map key='[location]' value='[address].[location]' />
          <map key='[name]' value='[category].[name]' />
          <map key='[original_language_id]' value='[film].[original_language_id]' />
          <map key='[payment_date]' value='[payment].[payment_date]' />
          <map key='[payment_id]' value='[payment].[payment_id]' />
          <map key='[phone]' value='[address].[phone]' />
          <map key='[postal_code]' value='[address].[postal_code]' />
          <map key='[rating]' value='[film].[rating]' />
          <map key='[release_year]' value='[film].[release_year]' />
          <map key='[rental_date]' value='[rental].[rental_date]' />
          <map key='[rental_duration]' value='[film].[rental_duration]' />
          <map key='[rental_id (rental)]' value='[rental].[rental_id]' />
          <map key='[rental_id]' value='[payment].[rental_id]' />
          <map key='[rental_rate]' value='[film].[rental_rate]' />
          <map key='[replacement_cost]' value='[film].[replacement_cost]' />
          <map key='[return_date]' value='[rental].[return_date]' />
          <map key='[special_features]' value='[film].[special_features]' />
          <map key='[staff_id (rental)]' value='[rental].[staff_id]' />
          <map key='[staff_id]' value='[payment].[staff_id]' />
          <map key='[store_id (inventory)]' value='[inventory].[store_id]' />
          <map key='[store_id]' value='[customer].[store_id]' />
          <map key='[title]' value='[film].[title]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[customer_id]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[store_id]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[first_name]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[last_name]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>email</remote-name>
            <remote-type>130</remote-type>
            <local-name>[email]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>email</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[address_id]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>address_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>16</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>create_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[create_date]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>create_date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update]</local-name>
            <parent-name>[customer]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[payment_id]</local-name>
            <parent-name>[payment]</parent-name>
            <remote-alias>payment_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[customer_id (payment)]</local-name>
            <parent-name>[payment]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[staff_id]</local-name>
            <parent-name>[payment]</parent-name>
            <remote-alias>staff_id</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rental_id]</local-name>
            <parent-name>[payment]</parent-name>
            <remote-alias>rental_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amount</remote-name>
            <remote-type>131</remote-type>
            <local-name>[amount]</local-name>
            <parent-name>[payment]</parent-name>
            <remote-alias>amount</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[payment_date]</local-name>
            <parent-name>[payment]</parent-name>
            <remote-alias>payment_date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (payment)]</local-name>
            <parent-name>[payment]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rental_id (rental)]</local-name>
            <parent-name>[rental]</parent-name>
            <remote-alias>rental_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[rental_date]</local-name>
            <parent-name>[rental]</parent-name>
            <remote-alias>rental_date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[inventory_id]</local-name>
            <parent-name>[rental]</parent-name>
            <remote-alias>inventory_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[customer_id (rental)]</local-name>
            <parent-name>[rental]</parent-name>
            <remote-alias>customer_id</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>return_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[return_date]</local-name>
            <parent-name>[rental]</parent-name>
            <remote-alias>return_date</remote-alias>
            <ordinal>23</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>staff_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[staff_id (rental)]</local-name>
            <parent-name>[rental]</parent-name>
            <remote-alias>staff_id</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (rental)]</local-name>
            <parent-name>[rental]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>25</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[address_id (address)]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>address_id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address2]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>address2</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>130</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[city_id]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>city_id</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>10</width>
            <contains-null>true</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>20</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>128</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4294967294</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_LONGVARBINARY&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BINARY&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (address)]</local-name>
            <parent-name>[address]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>35</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[city_id (city)]</local-name>
            <parent-name>[city]</parent-name>
            <remote-alias>city_id</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[city]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[country_id]</local-name>
            <parent-name>[city]</parent-name>
            <remote-alias>country_id</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (city)]</local-name>
            <parent-name>[city]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>40</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[country_id (country)]</local-name>
            <parent-name>[country]</parent-name>
            <remote-alias>country_id</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (country)]</local-name>
            <parent-name>[country]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>44</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inventory_id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[inventory_id (inventory)]</local-name>
            <parent-name>[inventory]</parent-name>
            <remote-alias>inventory_id</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[film_id]</local-name>
            <parent-name>[inventory]</parent-name>
            <remote-alias>film_id</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[store_id (inventory)]</local-name>
            <parent-name>[inventory]</parent-name>
            <remote-alias>store_id</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (inventory)]</local-name>
            <parent-name>[inventory]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>49</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[film_id (film)]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>film_id</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>18</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>language_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[language_id]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>language_id</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>original_language_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[original_language_id]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>original_language_id</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_duration</remote-name>
            <remote-type>17</remote-type>
            <local-name>[rental_duration]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>rental_duration</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rental_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[rental_rate]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>rental_rate</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>2</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>length</remote-name>
            <remote-type>18</remote-type>
            <local-name>[length]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>length</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>replacement_cost</remote-name>
            <remote-type>131</remote-type>
            <local-name>[replacement_cost]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>replacement_cost</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>special_features</remote-name>
            <remote-type>130</remote-type>
            <local-name>[special_features]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>special_features</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>54</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (film)]</local-name>
            <parent-name>[film]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>63</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>film_id</remote-name>
            <remote-type>18</remote-type>
            <local-name>[film_id (film_category)]</local-name>
            <parent-name>[film_category]</parent-name>
            <remote-alias>film_id</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[film_category]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (film_category)]</local-name>
            <parent-name>[film_category]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>67</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>17</remote-type>
            <local-name>[category_id (category)]</local-name>
            <parent-name>[category]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[category]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>25</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update (category)]</local-name>
            <parent-name>[category]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>71</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[active]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[address_id (address)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[address_id]' role='dimension' type='ordinal' />
      <column datatype='real' name='[amount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[category_id (category)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[city_id (city)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[city_id]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[country_id (country)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[country_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[customer_id (payment)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[customer_id (rental)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[customer_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[film_id (film)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[film_id (film_category)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[film_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[inventory_id (inventory)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[inventory_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[language_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[original_language_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[payment_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[rental_id (rental)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[rental_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[staff_id (rental)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[staff_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[store_id (inventory)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[store_id]' role='dimension' type='ordinal' />
      <column-instance column='[amount]' derivation='Avg' name='[avg:amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rental_id (rental)]' derivation='Count' name='[cnt:rental_id (rental):qk]' pivot='key' type='quantitative' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[amount]' derivation='Sum' name='[sum:amount:qk]' pivot='key' type='quantitative' />
      <group caption='Action (city,country)' hidden='true' name='[Action (city,country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city]' />
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country.city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.560166' measure-ordering='alphabetic' measure-percentage='0.439834' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cabuyao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carmen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ciparay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coquimbo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dzerzinsk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hohhot&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huejutla de Reyes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Imus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inegl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jalib al-Shuyukh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jinchang&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Koriyama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kowloon and New Kowloon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laiwu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maring&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Najafabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ourense (Orense)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ozamis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pudukkottai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Felipe del Progreso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shaoguan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taguig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tieli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonghae&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tsaotun&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Varanasi (Benares)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ambattur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botosani&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bratislava&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayenne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chatsworth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ibirit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jaffna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joliet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kanazawa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kermanshah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nanyang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ogbomosho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Otsu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serpuhov&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shimonoseki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sincelejo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Springs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanauan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tandil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xintai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xinxiang&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zanzibar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zapopan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brindisi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Compton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiphong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kamakura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mannheim&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meixian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Molodetno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monywa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nyeri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rancagua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rizhao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stara Zagora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sumqayit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syrakusa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tarlac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tarsus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tongliao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urawa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Usolje-Sibirskoje&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vaduz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vicente Lpez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Witten&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yinchuan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zhezqazghan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alvorada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Araatuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheju&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coacalco de Berriozbal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florencia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ife&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaroslavl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kilis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Klerksdorp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kolpino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mardan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matsue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mukateve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nam Dinh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pathankot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pemalang&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rampur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;So Leopoldo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sorocaba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tangail&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tete&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Touliu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Usak&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yamuna Nagar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Abha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Acua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Apeldoorn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bag&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ciomas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuernavaca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hubli-Dharwad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iwaki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Juiz de Fora&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kakamigahara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nagaon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portoviejo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;s-Hertogenbosch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salamanca&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shikarpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shivapuri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sivas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stockport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sungai Petani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Teboksary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uijongbu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yantai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ziguinchor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bergamo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blumenau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bucuresti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Celaya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chapra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuautla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dhule (Dhulia)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duisburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Halle/Saale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ktahya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuching&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laohekou&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lapu-Lapu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lengshuijiang&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lungtan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miraj&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nezahualcyotl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Onomichi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sullana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tabriz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tel Aviv-Jaffa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toulon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tsuyama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Akishima&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;al-Hawiya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;al-Qatif&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Almirante Brown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anpolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aparecida de Goinia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bamenda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Batman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Battambang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhavnagar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Birgunj&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cam Ranh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fukuyama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hagonoy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Huaian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ikerre&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ipoh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karnal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kimchon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Korolev&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luzinia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Miyakonojo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ruse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sharja&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tychy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Baiyin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banjul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuauhtmoc&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hodeida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isesaki&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamalpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Juazeiro do Norte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kirovo-Tepetsk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kragujevac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kumbakonam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Romana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liaocheng&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lubumbashi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naju&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paarl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sagamihara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Southend-on-Sea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Surakarta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tabora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Talavera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Udine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wroclaw&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yingkou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Addis Abeba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amersfoort&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashqelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baku&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Balikesir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bandar Seri Begawan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emeishan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guaruj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Higashiosaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jinzhou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jodhpur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kamarhati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kurashiki&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lhokseumawe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mogiljov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mwene-Ditu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nakhon Sawan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nuuk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Felipe de Puerto Plata&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Satna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shubra al-Khayma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tafuna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yerevan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yuncheng&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allende&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amroha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avellaneda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Balaiha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bayugan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belm&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bislig&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boksburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botshabelo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Changhwa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Donostia-San Sebastin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dos Quebradas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fengshan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haining&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haldia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kamyin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madiun&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maracabo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monclova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nukualofa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pjatigorsk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Purnea (Purnia)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quilmes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Salala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shahr-e Kord&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Soshanguve&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toulouse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yuzhou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ahmadnagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;al-Qadarif&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beni-Mellal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deba Habe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ezhou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gandhinagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hanoi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jelets&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kisumu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leshan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mahajanga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nagareyama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nantou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Okara&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Omdurman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pereira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Po&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rae Bareli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santiago de Compostela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Simferopol&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taizz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuguegarao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Xiangfan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yaound&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atlixco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baicheng&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Braslia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bydgoszcz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daxian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dongying&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Alto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Fuerte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Escobar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Halisahar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Idfu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ilorin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jining&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jos Azueta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nabereznyje Telny&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nha Trang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oshawa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parbhani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pavlodar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qomsheh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sambhal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Miguel de Tucumn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shenzhen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sokoto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Szkesfehrvr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tartu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ashgabat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beira&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boa Vista&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Citt del Vaticano&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dadu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ezeiza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;guas Lindas de Gois&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mandi Bahauddin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matamoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexicali&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mit Ghamr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Naala-Porto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pak Kret&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pingxiang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qinhuangdao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Juan Bautista Tuxtepec&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santiago de los Caballeros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Siegen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sultanbeyli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valparai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xiangtan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zalantun&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zeleznogorsk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;al-Manama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Athenai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Berhampore (Baharampur)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhilwara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buenaventura&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cavite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ciudad del Este&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ede&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Goinia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gulbarga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Izumisano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Katihar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Korla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kursk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lipetsk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Loja&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ondo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pontianak&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Skikda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tiefa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Torren&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttarpara-Kotrung&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valle de la Pascua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angra dos Reis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Augusta-Richmond County&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baha Blanca&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bchar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Effon-Alaiye&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elista&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emmen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Enshi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fontana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Graz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hunuco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iwatsuki&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Konotop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maikop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mandaluyong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Novi Sad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Osmaniye&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Purwakarta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qalyub&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rio Claro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Songkhla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syktyvkar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tambaram&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arak&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arecibo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benguela&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benin City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhusawal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Changzhou&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chungho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coatzacoalcos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daugavpils&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Monte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gingoog&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huixquilucan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iligan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ivanovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jurez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kanchrapara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mwanza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NDjamna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pangkal Pinang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Probolinggo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa F&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santo Andr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shanwei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sogamoso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Udaipur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;al-Ayn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bat Yam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Baybay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhimavaram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bilbays&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chiayi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erlangen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faaa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Funafuti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jastrzebie-Zdrj&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Junan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lilongwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Linz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Livorno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Novoterkassk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oulu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rustenburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint-Denis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sumy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uluberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruapan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valle de Santiago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A Corua (La Corua)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adoni&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Allappuzha (Alleppey)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ashdod&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Binzhou&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Etawah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fuzhou&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gatineau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hsichuh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jedda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaduna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kalisz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamjanets-Podilskyi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kitwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Le Mans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Masqat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Munger (Monghyr)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myingyan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niznekamsk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pyongyang&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saarbrcken&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sirjan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ueda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vinh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alessandria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asuncin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atinsk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Basel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brescia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Datong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garden Grove&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iwakuni&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingstown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lausanne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liepaja&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Merlo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mosul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pachuca de Soto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanaa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Brbara dOeste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Siliguri (Shiliguri)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Smolensk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;So Bernardo do Campo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sousse&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanshui&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vila Velha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vitria de Santo Anto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Weifang&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Balurghat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Batna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cape Coral&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caracas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cianjur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crdoba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czestochowa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fuyu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gijn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gorontalo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kurgan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ljubertsy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ocumare del Tuy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Omiya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ostka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palghat (Palakkad)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papeete&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poos de Caldas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robamba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sasebo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sawhaj&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suihua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trshavn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zaoyang&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zhoushan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>9</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>8</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{5bb26c57-9cdf-488c-8524-fd7abc754799}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{7371969f-6b6e-48c6-9dd8-ab30b4b7c69d}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' />
            <field name='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{b26e5844-2e88-4b53-88dc-4b9f2fa3380d}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Contribution of Countries &amp; Cities (in hierarchy) by rental amount</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+ (sakila)' name='federated.11rdsm81ofn2ae18f0v031jpg9m3' />
          </datasources>
          <datasource-dependencies datasource='federated.11rdsm81ofn2ae18f0v031jpg9m3'>
            <column datatype='real' name='[amount]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[amount]' derivation='Sum' name='[sum:amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' direction='DESC' using='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' />
          <computed-sort column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' direction='DESC' using='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='270' />
            <format attr='font-size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='10' />
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='Tableau Regular' />
            <format attr='text-align' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='left' />
            <format attr='text-format' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='C1033%' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='dashed' />
            <format attr='border-color' value='#898989' />
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='Technic' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='normal' />
            <format attr='text-align' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='left' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='center' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#555555' />
            <format attr='background-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='#f9e9e0' />
            <format attr='background-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='#b2ebff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='TechnicLite' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
            <format attr='color' value='#1b1b1b' />
            <format attr='background-color' value='#f2f6f7' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='14' />
            <format attr='background-color' value='#f2f6f7' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='cols' value='22' />
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='background-color' scope='rows' value='#c0c0c0' />
            <format attr='font-weight' scope='rows' value='normal' />
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='center' />
            <format attr='vertical-align' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='top' />
            <format attr='text-align' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='center' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='bold' />
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='Tableau Regular' />
            <format attr='font-size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='10' />
            <format attr='color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='#333333' />
            <format attr='font-size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='14' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='bold' />
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='Technic' />
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' field-type='quantitative' max='170.0' max-size='1' min-size='0' type='rangesize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#666666' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='dotted' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#666666' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-color' scope='cols' value='#333333' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' />
              <text column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk] / [federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk])</rows>
        <cols />
        <subtotals>
          <column>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{D27B2976-12CD-430B-815F-DC01B5C96E3A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Rental amounts by countries for PG &amp; PG-13 rated films</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+ (sakila)' name='federated.11rdsm81ofn2ae18f0v031jpg9m3' />
          </datasources>
          <datasource-dependencies datasource='federated.11rdsm81ofn2ae18f0v031jpg9m3'>
            <column auto-hidden='true' caption='Clusters (2)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:3]' parent-model='[AnalyticModel:{b26e5844-2e88-4b53-88dc-4b9f2fa3380d}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[amount]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[AdhocCluster:3]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column-instance column='[amount]' derivation='Sum' name='[sum:amount:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <computed-sort column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' direction='DESC' using='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' />
          <filter class='categorical' column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:rating:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;PG&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;PG-13&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:rating:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='TechnicBold' />
            <format attr='font-size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='11' />
            <format attr='color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' value='#000000' />
            <format attr='text-format' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='C1033%' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='#f3faf9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='TechnicBold' />
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='normal' />
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-family' value='TechnicBold' />
            <format attr='font-size' value='11' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='C1033%' />
            <format attr='text-orientation' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='0' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='TechnicBold' />
            <format attr='font-size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='12' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' />
              <color column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:3:ok]' />
            </encodings>
            <reference-line axis-column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]</rows>
        <cols>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{FC632035-426F-4C5D-ACF8-59CD3F66873E}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 20 cities by number of customers who rented</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+ (sakila)' name='federated.11rdsm81ofn2ae18f0v031jpg9m3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11rdsm81ofn2ae18f0v031jpg9m3'>
            <column datatype='integer' name='[active]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column aggregation='None' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([active])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' direction='DESC' using='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' />
          <slices>
            <column>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='NewsGoth BT' />
            <format attr='font-size' value='10' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='bottom' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='total' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' />
              <color column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' />
              <text column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]' />
              <text column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' />
              <text column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38F90CA6-B135-4D7B-9355-8751B713E6D6}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 20 cities by number of films rented</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+ (sakila)' name='federated.11rdsm81ofn2ae18f0v031jpg9m3' />
          </datasources>
          <datasource-dependencies datasource='federated.11rdsm81ofn2ae18f0v031jpg9m3'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{7371969f-6b6e-48c6-9dd8-ab30b4b7c69d}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[active]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[rental_id (rental)]' derivation='Count' name='[cnt:rental_id (rental):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[rental_id (rental)]' role='dimension' type='ordinal' />
            <column-instance column='[active]' derivation='Sum' name='[sum:active:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#76b7b2'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>1</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([rental_id (rental)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' direction='DESC' using='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' />
          <slices>
            <column>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' scope='rows' value='Number of Rentals' />
            <format attr='tick-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' value='#666666' />
            <format attr='height' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='44' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='#b2ebff' />
            <format attr='width' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' value='#ddebf0' />
            <format attr='background-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='#e2e6f0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
            <format attr='color' value='#555555' />
            <format attr='background-color' value='#ddebf0' />
            <format attr='font-family' value='TechnicLite' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' value='14' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' value='bold' />
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' value='Calibri Light' />
            <format attr='text-orientation' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' value='0' />
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='Calibri Light' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' />
              <color column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:2:ok]' />
            </encodings>
            <reference-line axis-column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[cnt:rental_id (rental):qk]</rows>
        <cols>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{5533FD72-631D-4D3E-856C-3A9334705EC5}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Regular'>Rank cities by average rental cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+ (sakila)' name='federated.11rdsm81ofn2ae18f0v031jpg9m3' />
          </datasources>
          <datasource-dependencies datasource='federated.11rdsm81ofn2ae18f0v031jpg9m3'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{5bb26c57-9cdf-488c-8524-fd7abc754799}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='real' name='[amount]' role='measure' type='quantitative' />
            <column-instance column='[amount]' derivation='Avg' name='[avg:amount:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#9c755f'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#ff9da7'>
                    <bucket>8</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <computed-sort column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' direction='DESC' using='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' scope='rows' value='Average Amount' />
            <format attr='tick-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' value='#333333' />
            <format attr='height' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' value='#ddebf0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='TechnicBold' />
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' value='TechnicBold' />
            <format attr='font-size' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' value='11' />
            <format attr='font-weight' field='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:1:ok]' />
            </encodings>
            <reference-line axis-column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[avg:amount:qk]</rows>
        <cols>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{3264C7ED-1915-4448-A3AB-6D715455A151}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Contribution by cities and countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='customer+ (sakila)' name='federated.11rdsm81ofn2ae18f0v031jpg9m3' />
      </datasources>
      <datasource-dependencies datasource='federated.11rdsm81ofn2ae18f0v031jpg9m3'>
        <column aggregation='None' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='25' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='26' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='23' type='layout-basic' w='98400' x='800' y='6250'>
              <zone h='92750' id='7' param='horz' type='layout-flow' w='53600' x='45600' y='6250'>
                <zone h='92750' id='5' type='layout-basic' w='37600' x='45600' y='6250'>
                  <zone h='46375' id='18' name='Sheet 3' w='37600' x='45600' y='52625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46375' id='16' name='Sheet 5' w='37600' x='45600' y='6250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='92750' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='6250'>
                  <zone h='20750' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' type='size' w='16000' x='83200' y='6250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='10750' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:2:ok]' type='color' w='16000' x='83200' y='27000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8250' id='17' name='Sheet 5' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:1:ok]' type='color' w='16000' x='83200' y='37750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44875' id='19' name='Sheet 3' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' type='filter' values='cascading' w='16000' x='83200' y='46000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8125' id='20' name='Sheet 3' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' type='color' w='16000' x='83200' y='90875'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='46375' id='3' name='Sheet 1' w='44800' x='800' y='6250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46375' id='14' name='Sheet 4' w='44800' x='800' y='52625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Contribution by cities and countries</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5250' id='26' type='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='3' is-fixed='true' name='Sheet 1' w='44800' x='800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20750' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' type='size' w='16000' x='83200' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='16' is-fixed='true' name='Sheet 5' w='37600' x='45600' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='17' name='Sheet 5' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:1:ok]' type='color' w='16000' x='83200' y='37750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='14' is-fixed='true' name='Sheet 4' w='44800' x='800' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10750' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:2:ok]' type='color' w='16000' x='83200' y='27000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='44875' id='19' mode='checkdropdown' name='Sheet 3' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' type='filter' values='cascading' w='16000' x='83200' y='46000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='18' is-fixed='true' name='Sheet 3' w='37600' x='45600' y='52625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='20' name='Sheet 3' pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' type='color' w='16000' x='83200' y='90875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1B7D4B54-FB3E-4E7F-B763-6AE28346B11E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country_id (country):ok]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:amount:qk]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[yr:last_update (country):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDE440CE-2F3E-4F3D-BE29-71811539E715}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:3:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:3:ok]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:rating:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9239BE4-00B1-481E-BD33-802EDC341B41}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:country:nk]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[sum:active:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{938186B2-5EF6-40B6-A48D-7A13E78BCA9B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:2:ok]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:rental_id (rental):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC1428F6-A19A-47E8-90D8-D0E025186C4D}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:1:ok]</field>
            <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B15C41ED-2F95-4C37-93C6-58BD133C9A5E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:2:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11rdsm81ofn2ae18f0v031jpg9m3].[none:AdhocCluster:1:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{A3DE1284-1CCB-4DAE-B61C-611BA6B7BDB2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      K/m4D6nOjr2yoviwtCMnuLuh/NIFcmncoQSlawhF//AoLU2NqybTLmfSGyGRKTxknU6HwWDA
      5XJRUlKC1+ulvLwck8nEyZMnqaqqYm5ujubmZoxG41UfxNU4N+7jVycnVqT95TNtt50SLBIV
      ggwux66+NuC14QEAdpdVoFqjVdHr9fj9fqampti3bx8ikYjHHnuMTCZDPH6pi5XNZunu7sbp
      dK6oyEtLSxw5coTDhw8DYDabaWhoQKcrRPe0WCwolUr0ev0KxTmbzTIwMEBNTQ25XA6pVIrZ
      bMbv99PW1kY+n0cikVBaWkp3dzd1dXWIxWKy2SxdXV1FRXz79u28++67LC8vY7PZaG9vx+12
      E41GkUgk1NbWrq8ER3zu4v+uF3/IlkeeYaxzGiG7yENf+2P6nvtXduypJxQ3s73Fye9+/AI6
      lYjsI39KuXOdr342wqnuWRpsEma9UeRKCbFYCpteTt+Um5DfS06mIbUUAIWORw61r8rinXfe
      4d5778Xr9aLT6Th27BgajQatVktXVxfPPvssR48e5Rvf+Aa5XI6zZ8/y0EMPrVsJPmtILozs
      6AzXJvSvDQ9wZHyEWnMJe8rKqTWXFIUhFovR0dFBNBotzrH09PQwOzvLrl27ih+W2tpaamtr
      iUQiKyry4cOHeeuttygtLbTayWSS8vJy/P7CQvfp6eniSF4mkykqz1KplCeffHJFXslkktra
      2uKIFIDL5cLr9RIIBIp6yr333svw8DBOZyGCaHV1NYIgkMsV1koMDw+jUChIpVJXFgApedLZ
      HPlsHkVJNSn/NGv1dqO+eZaCTqQKNSUOPbnclZQZEZ7FObQSE8lEgrRIg0SUJ7IURalQEIvH
      yclEyGVKUonomjk0NjbS0dGB0+nE4/EUH1goFMJms3Hu3Dl27NjBb3/7W6ampviLv/iLK5Tn
      s0cysUw+D4nlGLD+fIFOoWB3WfmKtAGvmwGvm8YSGzaNFqVKyZNPPkk0Gi1WRqvVSl9f34q5
      CI/HQ29vL/Pz8/zhH14aEpfJZNx7771Eo1HMZjM7d+4ELkUabW1tJZFIMD8/v2JINp/PMzg4
      SDweLw6/ajQaXC4X+Xy+2MrU19eTTCZJp9NIpVJyuRwjIyPo9XqWlpYoKSmhv7+fXbt2MTIy
      QlNTE6WlpYUQvhf80q4rAHc99SVmuk6x5d4nIB3DWVWO3BZGlKsHZDS2H0BjM2CLz5JKJKjc
      0ghKC5XlV/jyKEr4s69+fv3918CDDz6IXC5fcyb4RiIWg1y6coTqdhzvTkSXSF6oEFdCKpag
      lUjxzy/gqKlesc8Xj+GLX+pCKaVSVEshVFIZSETs/71HCaSSOC+8A7vdTkNDA3q9fsUo0Jtv
      vsnY2BhPP/00ZrOZ8+fPE4vFCAQCPPXUU+TzeZaXlwmHwyuepVgs5umnnyYSiRR1CpVKRWVl
      JRaLpagXzM/Pk8/n8Xg85PP5YsWenJykurpwTw6Hg1deeYUvfvGLQKElcTgcnDt3jtbW1vUF
      QGVy0NjuWJFWveWS1Fe2bANgq7WykPCRhwjgC4QYElKr0j8uwWQWk9VOKBQqCkAqlSpup9Pp
      Yv/v8u1MJoNEUgi+vd52NptFJBIhkUjW3C7TSPj6gVIEodDNyOdzxEI+ktHCl+fiCM3l2/l8
      vqgYrrctCAKZTAa5XL5i+6P3dnFbqVSuGjW5HL1BQ3o2jsWkv+rz9M/PE/EHkMnlCAjMDA1j
      KS1FZzLhGh3FaLORTiaRK5WkEwlsLc10fiQYiEOnx6nXY1KpwWJkIujHpFJjVql57LHHcDqd
      xe7Izp076enpwWYrzEes1cUCyOVynDlzBo/Hw5NPPgmAWq1GrVYTj8eLQrZlyxay2WyxhRKJ
      RGi1Wnbu3FkUKL/fT3NzM8PDwzgcDtLpNKdPn0alKnieXlcAxjqOU1phJ5JSU1pWqPhimZx8
      JoNYLCKdziBXyEknk8iUasTkC2lK5aXm0mKiuaF8Vd7ZVJzgskA+k8BusxYtfYZHx9nSWL/u
      C5v0Rpibm0Mul6PVajGZTCwuLmI2m/F4PNTV1aFWqzl16hRlZWW4XC6am5tXTMJ8Ev77i+cJ
      xQsCbdEp+M9Prx7KvdWU1myjLTeKzx/Car6yEOjNFoxWG4KQR8jncdbWoNbp0FsspFMpRCIR
      XpeLpl27yGbWHjZdjC6xGF1ac59JpcKkUnO6swOHTl/QLbQqnDo9E0E/KqlsVRcLQCKRYDKZ
      WFpaKlZ2j8fDu+++SyqV4o/+6I+AgqnG3NwcMzMzRZ3hwIEDJJPJYjfpgQceQCqVEo0WutQl
      JSVkMhm02sIs+boCMHnmfab6rTzwtT/l/PPfZ1kswtBwCH/fMRRyMDgqsVj1dBzrQqXRYdYJ
      KHV6lJX7aGyuvuKDl8qVHHv111Q0bqezpx+jUsRcQoUiucBSGva1ri8E7777LocOHcLv9xMM
      BlGpVLz55pvFafo//dM/RaFQEIlEyOVydHZ28uCDD16xPJ8V8okQv3v7HSLxFM/uunvV/lDA
      j8lS+JhF43GGZmdWHUM8Dm538aekzMm4p/A76XETXKeyr8W1eoF16vQoZTKcF4UEMMrViFVm
      Pjzdhd1cqKzNzc3Mzc0xPj4OFHSFsbEx4vE44+Pj5HI5XnnlFTQaDdXV1WzZsoWxsTFSqRQG
      g4GKigry+XxxRGl0dHR9ARDJtZTaNfj9S4CAIMjJJQMk0zly+TylCliOxinfcQ9L46eJLolo
      O7SNk2cnryoAiCQYDTa2NTl4c26B5XwSZ3kD/uEZkqkMAuubGzc2NnLu3DkcDgder5ezZ8/y
      9a9/nePHj1NSUkJHRwdjY2M8+uijfOc73+Fb3/rWNb6GTz8iuYb6umq6u3tZ8ARX2AIhZDl7
      8hQPf+5zAGTFIsKq69SjVArMeu3Vj7tOkhf+wtkUZAst7PJihNnelROYNQ4jGsAHlRgAACAA
      SURBVKWG0+45WmsL3ajWPfcC0Hjht8PhKHYttVoty8vL6HQ6AoEAjY2NHDlyBL/fj9lsLtic
      Xe4X6KWzA8guzAP0vfsmLQfvpv90N2qWSYsEynceov93b+EoMxEKLlHeWM9Y9wCminp00mX8
      vhA1+x7EaCzEyFo1D/AJmfRGKKuquSVKMMBLpyeJJwum3zqVjKfaa65yxs1l0r++/8ylhRGO
      nTyPROekud5JQpTnWNC97vG3muVwbpUAXAtqhZQqu57WmoJA2EyaS39GDZFIBIPBUIzrsK4A
      bASJk6/TZNm4gHHBRJat23asqRzCjVWCJRIJ0eUU+QsKrkjII5eKVym+t1IJnvRHcC8uIJGI
      yeXylDqcK/YL2RSReAajQYs/HuHFoZ4NezcbzccVgGvhonC01tpurDXoRSV4ZnoSscpAhd1y
      2d4Mbk+MQNhPS1PDGmcn6elfYEfrpan6SW+E2dlZFAoFGo0Gs9lMIBDAYrEwNDREWVkZRqOR
      kydP4nQ6CQQCG6oEP3eZEry33sqXDtRtSL4byWTfGYbGZmk7+AilKwfxEEkVGA2318z1raB/
      ylv8f50CkOKtf/wBe+7fx5gry/4HD17TWd19A7TubOOtd95FV6JDSMuJRxeYckOpMcf4zAJK
      EiiMBkILEXRGDcuZZVJp/QoBADh69Ch33303oVCIcDjM9PQ0crmc999/n4qKCp599lkUCgXx
      eJx8Pk93dzf333//9d3mpxhrZRMIebS6qw+DbnLd5tACmZCLoXPniYWv3V97dWUZQ6NjpDNZ
      MpkciwvzoNBh0SvQGc3IRTkCgSAqlRKDuYREJEgmL0aajXK+r5+x+UvjCQ0NDXR3dxMIBJia
      miIUCjE5OYlcLiebzXL27FmmpqYoLy/nnXfeoamp6fpu8VNOZHGCnsFJMtn01Q/e5HpbABHG
      2p0cfPwQx46NXvNZO3bs4vpCUOxZd88DDzyAXC5fZQ798MMPF7f37t0LwF/91V9d11WvxiNt
      FaQu+N+0GVQbmvdGYXdWYBgdZzm16fP4WrhOAVBw8Nk/AODQ45VXPdoXCDG4gTPBoQszwcFg
      8JYowXZFFhRcUHZjzM9HbyslGCCRSCAWs6bd1iarueFK8NaGchLRMMMzHlq3NiITXxrhX3R7
      0IhShGVWKs1X/6JOeiPMzMygUChQq9VYLJbiut/z588XzW1PnjyJyWQiGAxSU1NTXIDxSXmz
      a7a4MH5blYVH2zbW79BGEI+GURlL0anWXzSzySVuymqOqYlxwmkpXZ2deINRlFo1SpGIOdc0
      WyqtDHr6qa1tZHKoG63NQTa2hEgi4+nHHlhlcHbixAn27dt3YTnlEjMzM+j1eiwWC8FgEKVS
      iUwmW/Gl3SiWEhl8S4WhuWji9uxjBwJ+ejq7adq1/qKZTS5xU9YEW+ylLHvnCCxnyOdyZFMJ
      5v0hqsqdiKRyasptjA4NEV2OEkmKMZmMGPUa+oZH6BsaXuEqsbq6mv7+fgKBANPT04RCIaam
      puju7qa9vZ2Ojg5cLhdbt27F7XZTX7++WcVnkdb2+/nm//V/Y1Rvun29Fm5KC2B3lPP4E1ee
      ET6wvt67goceemhNJfgi7e3tRcvCr371q9dVzquxt95Kja2wmsmqvz2jq/R3vMfQmIu2gw+v
      mgjbZDU3VAB8gRCDbKASnLi1SrAim6VMfXsrwSVWO464QKmjbMOe+2eZm6IEC/ksfYPDlJeX
      kUhBmf2So6rFqWFk9iZK1KvN3xJLAZYlOiyaQoWY9EaYmJhApVKhUCiw2WwFp1olJbhcLurr
      6zEajZw4cQK73Y7f76e1tXXDZoLf6JwpKsHbqyw8tuvqI2E3G0EQ0JpKsJh0H9mTZ6DzDGkU
      tO2+/cy4bxU3pQuUWw4xPO1BrRB4r9tLXYmYnExJNh5DL80wOxLCrEiTTmTQGZQsp0Tk4yFM
      ajEhbT1PtDcWrUPPnDnD3r17iyuJRkdHiUajyGQy+vr6+OY3v1lcInn69GlSqRSPPPLIhtxH
      LJklEE1d2L66W5Fbgd1ZQf/A73B7WzHpL3c+JSa9HEFpa2R6YpyE6Nb44bnduCmakiBWUGnX
      4I3mKNHJAQEEECFCrlBBPks0GkMQiUEQEBDQm0rYtrUR5Udcb1ZXVzM4OIjX62VhYYFsNktl
      ZSV6vZ7Kyko6OjpYWFgoeh8Q30HB4HIxDz/9yS/IyPRUV640BBIyMUIxsJj1VNfVY92gVvHT
      zg21Br0ec+i+wWFam7dc1S1KRU0dMpnsio6xbhRTnqViC1CiV1Jt+2g349Yy6Y+AIDA93ENO
      ZaOuen0l+E62Br2c20YJlshkDI1PXPGYi0rwxzGHvuhU96PblyvBYrH4igqxIpfDqS4s2ctl
      o8zPL62p+Obz+VVKsCAIZLPZNbc3UglGJKK6eec1PfNNbpISfJGwb5Ehl5/W5i2rZioj7mm8
      mGkoXd+KcdIbYWxsDJVKRT6fx2QyoVKpCAaD1NXVceLECcxmc9Fc+qI/mo1i0rNEx2jBlHZ/
      k/22awE2uX5uql8/9/QIOudOPnj3DXS2CqLTUyQUKqRyFbl4gLTMxPvRIBXlpfhCCb761MOr
      ZoI7Oztpa2ujp6eHTCaD0+kkl8vR3NyMWq0mmUxy4sSJGxIjLBhNcX6q4NSpqcywKQCfAW6q
      hihTqpgaH6aytoGAzwsSCZXlZSQTSRQaLSq5BIvVikSAUvvakVgqKysZGxujvr4ep9OJTqcj
      Go1y6tQpJiYmaGpqwmw2r+OUd5NNVnLbKMHXwq1WgtPZHMupwppgtUKKXHp7xRq60prgj7Kp
      BBe4bZTga+GTKMEbMROczRYqv1QqZTmy9uzvrZ4J3uT6uGlKsHtulhlvkC3NrRhUl182wZnz
      syQSSxzav2dFn//s+V727NxWTJv0RhgZGUGj0SAIQlEBVigU7Ny5kxMnTqBWq4nFYpSWltLS
      snGtGcCEe4nTowV/pE+3V6NWbJocf9q5aUrw1MgYASFD8EM/mCrRJ+cJJbKkclmWl7LEMjni
      S0HkOh1ulxubvYSh6QX27Ny2Ip+enh527NhBd3c3arWaQ4cOFb3FqVQq5HI5YrH4hgR0C8VS
      9EwXYgQ8vrsS9adqfbnARH8XGlstpbZPHjPts8JNU4JVGjUatRoQ0VRbwaJvCXE+i0yuwFZq
      p6W+CrmsEP2ksroWrUKC2bi6qa+qqmJiYgKdTodaraanp4d77rmHjo4OZmZm2LFjR9EJ0obf
      g1yC3ajCblQhEd9+jnGvRC7mYT6cZ6jr9K0uym3FTWsBdt61f8Xv2i9c3Uv0gTXSHnzwweKC
      l8u53Az6oifgjaal0kxLpfmG5H2jESv1ZMLzaMybVqKXc8OV4BvhHfp2UILXU3xvVyVYJFXz
      wBNPbcRr+ExxU4ZB45EAQ9OLtLS0oJJe6jrMuOYxSFIE5aXUlqzlQS7HtMtLdUXBsGvSG8Ht
      DxZDbKpUKmKxGGazmerqak6cOIFGoyEcDtPW1obVurFR3ZOZHJ0TPgD21FlRfEpDrl8cSLBa
      rYjFYvL5/HX9B677nOvNC7gh+X70/03pAvkW3QRiy3Se6SAQCpNXaNHLRHjd82yptDKw0E8H
      Ahqdnng6j1acIZ4Ts72xnKMdI/zJV59CcmEkaGBggNbWVnp6elCpVOzdu5fOzk4aGxtRKBT4
      /X5mZmaYn5/na1/72obex3Iqy2/PTAPQUmH61ArA5b6SErEIyzkJFsPHdXorsOCaRWWwYFrH
      ce7FEEU3KtJ8NptFKpEgwHX7jL0pSrDWZEKaXCIpSJDJFWjkIiLLKeprqpAoVDTVVZFJJUnl
      RJQYtEhlcvQGI82NjZTbVjb3TqeT6elp9Ho9arUan8+HTCbj1KlTzM/P8+CDD1JSUlIMlbqR
      SMQiHCY1DpP6U6cEr8fcWC/vd/Suu981PsLMwiLp7DrrB5JBuoZdeNyedfMYGRqkb2Dw418j
      l2ZycoLegZE1d+fzeSYnx/HOzxBazq55zGB/L26vf1X6TWkBSuxOHrBfeX1qpVmDzFqHWbWy
      Yn3u0ZVuDR999NGrxsr90pe+9PELewUMajn/6XPbb0jet4LUcgxVSTV7Stb/DipUCsanpzEa
      S1aFiAJAaaatqQyDdf0Zf4NWhVRYfw21zqBjdNaD3bp+JHv3vIvalrUXjsvlcqQSCVKNGZN6
      7SqtVckJLsUpta2Mm3ZDBSAQTzPmvcaACkobRKME1o6NB8DCogeR7NYMvk+4lzg+vNKd+Jf2
      16JW3Nw4wRaLZUWAuk+CQqVBEIURC+uvDpPJlWzfvRftOvfpnR1i2iNgXJ6mZctaTo4hL8By
      fP0Xq9ToKDEuM7+wSF3VGoKUW0ZlcBAOeCk1r+5mxZbCROMJ0vkgtpK15zgkUjnZ+GrTihv6
      9mw2Gy2tq5Xq2clBxqdDHLzvADKRiMnJKWpqaxAB586dY/fu3WsGoJPK5CwvL6NQKBCLxajV
      aqLRKDqdjkgkgtlsxuFw0NPTg9PpZHFxsRiZ8JMSlfjIzqz0MVRTV3/bxQm+LoQcoVAIiXR9
      uyqlQsq5s2fZ074P1Ro6j620kkDSS5lzfdNznV6PP+pbe2c+gz8QIrwUo6V1nXgLYgUqpZSy
      srV7EYlkCovFTHSNCn61Mtzcz9cFKmud9A8GOfr2G0SSIsKeaYT77ufll/8dZ/MWdu9e/9xw
      OIzJZMLr9ZLL5WhpaSEcDqPT6QiHw8UF8hKJhFRq44ZgP5OIpejVYtyh9dc3B/0hnFYNwXiO
      MuNaSn+O+HJq3aWnAfccweUrrJ8WBAQBhCs4c/R6Fkkk08XRoVVlDIdQK1VELwve/VFC4SWk
      a3ThbtGCWQkGgxaNRoNGo6GxsZH5WRdlZaWotVce41apVIRCIUpLS3E6nZw9exaNRkNXVxc6
      nQ6/349KpSKXy+F2u3G7b98oKLcDUiFPJLHOlzOXQZCrkCj0lGjWGfGSKNCppOTWqZzyC621
      Qr6OziaRU1FZic26/rCyzaQnL1cTDKzdijQ1bkGuVNG2bf0hfKlUgkSy+nu/IsXjmiERXl43
      k+tF451ElVk7P7kSQIvlMt2o3lDov507d27Nc2ZnZ3E6nahUKtLpgmvCqqoqQqEQVVVVeL2F
      1Vomk4lcLkdZWRlzc3PMzc2tmd/1MDgXwj21Mp/zXcJN9cEpCAJOp5Oyso2bzVUZSnCm1u+f
      i8XiK5ueZxP0j06SyYOhebUOoDNZ0V3J9CiXYW7RgwhIZXJrC4FUgTznJZtf/+Po9/uRSaWY
      zWvM1OcyzMwtYDSt1p1WCEAiFiOygW61U4suFkQbJ1C+UPyWxAYDMEvh7ho1uVzh+UglIuKR
      APFrN8H/xIhEog03hfb5g+Ry6yjBElkxxu+6yHU0lFkosX5MLxMSGeTSDPV1kTvwBFXmNQRA
      okCjUpDKrN/HD4f8SOXKtQVAIqOi3M7UtBc+oqivEIDq5hZkNS1Exk/RcWYGeXKBHU9/A8/g
      Wcw1LSSCPqpaC8OAY2dPUL/nABNdp6lqqGFmdIrAwhyVbXfjqCg8NO2IcdWCmHw6wQdnuqmr
      a6DKcUkiz3X3smfnlYcYJ70RXIsedDodIpGIyspKpqamMBgMLC0t4XQ6qays5MMPP6ShoYG5
      uTnsdjuVlRvjwOqjcYL/5IlPv4MpZ6m96Oni4+B1jRLNqZD4PZSWfLyoNDa7E7lKtW74JrfH
      g8XqwKBbO95cKpWitqoSkeIKH4d0GpVGRSyRRqu61KKtrQRf8GxgqWll/tTL6LY9Rd/b/4Ig
      qKlq3U46OEnHi8+jq97B4O9+TT5xP0Nnuqhof5zu139F6Z/95bruTcRyFal0CpsyyWtvvEU8
      I8FRU0lweprxmXmMOiUKuZb77tm75vkXlz0ajUYWFhZQq9WcPn2a+fl52tvbUSqVnDhxglgs
      xsTEBNu2bdswAfgsEl1aYin28T1d28obiGVm0a3RvbhW5EolNqVj3f1CPk845EcisaFVr55P
      UCgUBEJRRNIEpda1+1vL6TxSqZgF1/QKS+F1R4EsVY1sO7iHmeO/IbnkR5DI4cIk28D7b1N/
      4CD97x9B62wi5Z8FIJdOIpZf3WmsUa9HaSzDHzrOgwd2MRsX4SgrJ5XJkIt4qNjWvu65drud
      hYUF4vE42WwWjUaDxWJBLpeTTqcZHR3F4XCQTqdxOBxk1olwvkkBqRgQfwI9JpcmkcohSSSA
      G7NSzVFedcX9kZCfTC6HxWRZ9xi9XodOosBZunKybU0BUJe10GQr9MUq736ahaE+Dnzx6/jH
      +pju7aG8/fcoKaskMO9CJBahN2gpDYSJBYO0/P7XrujcCmD/nl2QTbHvrv2U11Zxue+GgeFR
      6krWD5ZxLTPBBw9eW/C+6+WuJhuJdGEuQC2/JSPIG86Sf54xn4QdzR8v4uXk9BxiUQ6tRnP1
      g28QBlMJC6dOI5HKqCxfW2dJJhJIVVcZBbqITGPkYvUSiSSUbS1MJlXu2LfiuJLyS10Lq8aE
      tXLlRMbV1gSLgKGxlc6wRBIJQ+OTax5/q9cEq/Nx5KL8hTjBKebn5z815tBrcdEUYovi4w9U
      5PJ5srn8+sOcN4mmxiY060XGzGXQGkzF+G6Xc9PWBC/MTCFWqomkQZpLU1e90mdPcG6MgNxJ
      g239L8mkN0J3dzcGg4F8Pk9NTQ0ulwu9Xs/CwgKNjY1YrVaOHz+ORlOICr5lyxaqq6s35H6e
      O76wQgn+z0+vPfX/aUEQ8qSzWUodH9+BWENT8waW6OMjl0mJL689SpRIJoiEwwjS1Ur2TWvH
      lcR54egELaVZcjkNR86OUabPkBMpEaejVFl1hBUCrzz/DhVbdiCNelFYHTxxeP8Ks4jp6Wka
      Ghowm80sLCyg0Wjo6ekhHA7jdDpRKpVks1nsdjuxWAy/379hAvBZQyyRolapyH4G9KTY0hIl
      jrUHOyQSKWKpFLVm9SjSTRMAU0U9+nMucokcW3bWowrmITJLUqREmpEgV6lYDgRoaqql3GEh
      ZpITTsr5qELhcDjw+Xyk0+miEmwwGCgvL2dmZoZkMkkmk0Gr1TI6OsoXvvCFm3WLnzrkSjWl
      pWsPLX6aSC3HWFpOIgoG1jSGkyvV1NasbWf0qXOMVV3fiFQqvWGLK67Eh4OLJC/0I1VyCfc0
      rz90t8nNxe9ZICdRYV/HGnQ9VtQiq06NZAN1mVg2x/D0JzdDuEgiJyISidwy79B1RgEQF7xD
      53JrKsG33Dv0Hcr05DSGsgrsfAIBOLhlHXPUj8vhQxub3yabrIMv4Cev1EDl9TlE/mwMZm9y
      RxNbCtNQX4/SdP2jWXdO/KBNPrOoNTqq6xuJhddZdHMFVijBm2xyp7HZAmxyR7MpAJvc0WwK
      wCZ3NJsCsMkdzaYAbHJHs0IARgZ66OzsZGBkbXPkiywvBenu6SOTF0jGwvQPja1yapGIhvCF
      Li22Xph1sbbTugI9veu757tWenuuL4+ZkW7ePtoBwPzEAK+/e4LZWRe+2VFmfbFPXJ71mBzs
      JHQDwl/dye/v4yL59re//e2LPwI+D7/89Yts39GGXiliYGQKm82Ke2GW6Zk5Smw2xCI4+t7v
      EFJB3j+/QMf7r6EULdMzm6S51kkqHmFgZBKNLI8nFOcH//A9bGVVRLwerOVlzI4NkREpkYsy
      9PYNoDVaUMgkvPPWm0gkUkwmHW7/EipJllA8g1oOrrkFXAteLAYl3nCC1FIIsVSMa24efyhK
      xDuPWKXj+Pu/QyqRoDNZSUR8TM75sFq0eNx+QuEIBr2OWNjPyNQ8Zq2c7//oJ9xz8DAmjYS/
      /6d/5sDBwwS8brJhF558CdKkj+k5L/l0jGgyj0xI0TcwgtFSgkwixuNxFxxLCRnGZtzYSgws
      uOaYdi2glMFf/83fUNPQgpCKMuMOUmIysDA7yXtvvULp1kOYrr547rq4U9+fxaQnGvIxNrOI
      JJtCqtbhdS+ikEBv/xBKhZS/+Zv/RVlVHUpJlqHxWazWEtyLrpUzwU0tOygtPU5LUy3f/87/
      ZPv2rTz/0jzeyTPs3t7Er2bC/P4Td7P/rn08/8KL3P/kF3j/jVkefOJz/PiHrwB7eO7HP6Jt
      30HChJjwX7K/7u/rQ61OcnxgiaD7PZosYs7PxfiS0cHWmlJCfg8h7wQvjHmIeSdoLNVTd/gp
      StJBfvTcr6k0JOChz3F+Ooo5OETLwQP84renEMKz3Hv/AT44N0065Ccc8vLzF0ZIeKcpL9Gy
      lL+PV3/wM37/W39CBTn++cfPsX1rNS9NWJHJ5Fz0cSuRyZCIoK+vjwPNhRnFn/7kORwWLdLy
      vfjnJzETZi4mxuiooqbUyHP/+Lfc+/mv8+pLL1BdasKfuocPf/Nv1Fca8O549MKdp/jXn/ya
      UpMMv3cPpzsH0SZvjMOuO/f9pfjxj/6V9vseZObsB+z+0n/kjTf+Hb04zpgvzVNPPV28j3/+
      8Y/Ysa2JX036mBt4f30dQOCSty6pTEY2k0Z+wTDrH773XZp37kWGhMSSmyOvvYqp5pLLbUQ5
      cjkQy9VYTVryF9rXfDbH6GAvIrmKLbvuosmp5dz5ocI1pDKy6TRyhYqWcj2n55JUXfhENrTs
      oLmhkpwgYnZ8iP7RQhO/pXUn1fWNHDzYjiIvIJFKyWXTyORyfAsu3LEsciHN1l37aa2/zFZc
      AKlSR3lFOfXV5YjlGirKy2mqXWlPXlHbSGtTHW37DmDWq9h110Gc2jznh6YAqGzYxv62LQTc
      LlzBFCpxlpqGFrY3N6DUGFHLxYCA2zVNMCUgJKKIxDIymSt1JjaGO+n9FYudz4FUoPPUcdzB
      GNv2HKDaIqN3wotJqyg8DaHgXwnAXlELwkdwzc0JgiAIiWhI6O4dFHJ5QfjB978j9A2OCvkL
      x/R3nxPOnTsnzMx7hUQ0tGJfMh4Runv6hHg0LPjDMWEp6BWGx6eFxYUFIScIwtTooDA+My/E
      I0Gh63yPkMrkBEEQhEXXlNDbPyzk8oLQ8da/Cf9+cqiQYS4lLHqDQti/KMRSWWFkoFeYnpoR
      EomY4A0uCYtutyAIGcG96Bd8iy6hu7dfyOTywlLQI5zv7hNS2ZTgXvQX7y8a8gm9F8rrdi8W
      0y9uLywsCLGwXwjHUoLbvSgsBb1CLJUTFt1uIRL0Cud7Cvlffk407BO6zvcKyXRGcC96L53v
      mhJmF3xC2LconO8dENLZvDA9NixMTIwLy5mPPvmN4U59f9GQT+gdGBVSy0tC3+CIMDe/IETD
      fuF8d6+QzuWFoHdBGJ+eE+JLAaHnQjkX3W7hmkwh3B4PpfaP6fjoYzAxMUFtXR2fDQ/8t57N
      97c+m7ZAm9zRbM4DfIbpOvoOwY/p88q3sLjOsGeMN147+glKdXuxoesBJv030VHmJkVqSwor
      xLq6zlNTamQilEeZixPwLTL02ks4nDXsbbTz4m/fov2+x2iucTDY08tS1ENFw07ef+s1dh18
      lFRwlqnJCWq238NrP/jvGHc/wDeeOMRvXn6Dg48+iSLh4e0PPySZ3pgAHbcDd+SCGCGfY2yg
      F7HKiFoGap2W6bFxSsqrELJZLAYl8bwa6xrRSG5nxgb68PlKyQDxcJASCew99DDv/+Z55oYE
      nvn9/52fPvcvNH/rzxjs6qD2wIN0HXkFY3kjr770Ig6Limee/Q88//Ofs3XrXh786pd4+Uff
      o7xxOy+9+DJqUZL/+Gdf4afPvX+rb3XDuCO7QDHvJFFBj6PUytzkKAqDleRSFFuZEyG1xNnO
      Pgz6T5+3hD3NDrqmQqhyEWQaGyBGr9MilUj+//bOLLitK03M373YdxIgAALcd4sUZYkWZcnt
      tuyxvHZPj6d7MlUzqSxveUhlqlKpJFV5SFUeslRSyVQqlUomle705CGzpNvd053u2aRRty3Z
      bmu1LEqkJIoSuIEbFmIH7pIHUJBAXFoECWq93xP54/zn/iDvf8+55/zn/+ltD/D9730Xm3fj
      IL/RzvBQDz19vUxPTjA0MopotuG02TCIKuE2F9/73p/S19vD5MR1RkZHcZtV/s8f/YidZxJ9
      8mjoS/DTMgXKxee5PLXMQG8btycuMfraO3zxN3/F2FtvY8gluDgRYfzw01MM794USKd+nksH
      gHLpHtXkxGoUsHs8ZJJJnB4PyBLpXAGX8/HluqwX3QF2TpUD7PYG7mp2YjA8ncWjdZ5Pnst3
      AB2de+gOoPNc81wugz7LnLt2l3PXI3vW//i+Ti5/VTXzOvjGaA/Tqe1Pu/ua3Sykt3dOI+x0
      bqttwx1gYmKCQqHAgQMHHkv+zuedc9cj/Lcffrx3F/jO1/n+jfmGdDXWGeDMwuK229tMIueX
      lrbV9jBsq21Dp0CyLHPt2jWy2SwzMzON7FpHZ09o6CNaVVXGxsaYmppiaKgcX64oCplMhnw+
      j9/vb+TldHbAP/6dNzh17gYAHqcVAbBZzcTXsxiNIqIgcOaLrz5S+SxR9wiwdPtLLl26SnI9
      zaVPP+Lcx78gu1E3SxAEpqen8Xq9ZLPlsjtXrlzhww8/5NSpU0jS3h8E0dkam8VEyOfm6wf7
      OLyvk9cO9tPksuPzOPjg+AFyhRJfP9hfd7/fGO3hm6PViZVNBpF+/5O/P1H3CCAIBlQpSyoR
      JZU30xsUmZ5ZxGMq0D7SwutH7hUqXkWS2uju7iaRSBCNRitpwaE8WqiqiijqC1G7ZbvvWoIg
      8K++++c4bRZ8HgfpbIGVRJqesI+T56aQJJmfnvmy7usPh7wYRAGb2YiqqrQ4beRLEq0eB4ls
      AUGAfEnmf31yre6+95q6HcDmCTDghUvnLyIVBeJxCIwcINhkpbj2ZxSjf7TRUsR75Geoqkom
      k0EQhEpe/vPnz5PNZikWi5w4caJyRE1VVQRBqCqJpNM4svlyFE8mV2Qpdn8l59pMtPJzbL3+
      gnmfz0SxmY1IsoLdbOL6YgyryUimWH7YJbIFilJtgbongbodwGq3s7oaVMEJ0wAAFJtJREFU
      49jxE+TTcQqSgM+zdXqDJred9979tfKUSC2CYCEcDnPhwgXC4XJJS1VVuXDhAmtra/h8PsbH
      tYtk6zyZ/PJmY1aF9gKpVOLaJ5/g8noJdHYycfYsuVSK/RuldOt2AJPVTqi9HClpavLhekj7
      1NS/QEqXhz7FfRD3C/+WaDRKLpdjeXkZKA/NVqsVl8ulvyjrNBRVVYlHoyzcusXHP/gBnfv2
      sTo3R/TOHe5evbq1A6iKAns0HRkbGyMcDlfNXWdnZ5menqavb2cFm3V0tBANBrpGRlBkmf6x
      MeLRKP6ODgxGI10jI9oO8MX5c6zM3sAeGuGVowcbapCqlFi/9k+4Vwu+oP46Fv9bvPfee0xO
      TlZGAFmW+fLLLxkYGKBQKOD1eolEIpW6X62tO69tq/P8YDAY6N6/f8vPNR2guB4lNHIUoc4E
      ToLRjWi9l6elvLojmgOI1vWNn8s3t6rkKjqqnKEwNUXse9+nCVgGfP/oH1JqbiaXy3H27Fna
      2trwer3cvXuXUCjE1atX+eCDDyqrSoqiEI1G6erqqsteHZ0aB/jVqf/H3FISop/SO1rfy6jR
      3kVcPIK3yYoglB3A5DmIwdYGgGhpBUHE4jte0RGMLpRcntLduxWZWihiNBqRJIlkMsmrr74K
      gNfrJRqNVr0nnD59mra2NpaWlujq6qqMHKqqMjo6itFoZH19nVu3bmG32xkaGnqmV5k6ekO8
      8tZLe9o/DQqFeBKocYCX3/wmnPopVyZu0Bxfr7vD6EqaQkHCYjFSyE+Tii5gIIXFbKCgmrDG
      biEnksSTefq7mnHXVq8HwGw2EwwGSSQS2O3ll+7Ozk5WVlYIhe7X53W73UxOTlacJJVKsbCw
      gNlsrrS9ffs2kiQxNTXF4OAggiBQKBRYWVkhEAhUSpSurq4iiiJerxdBEJBlmWg0SlNTEw7H
      03FAZqkocSWVe3jDHTJefLY2MzWnQAa7j6H+PmS5vilQsSSTShcQBYFUNI0rlCSRSNMRNJJM
      FVhKJAgZU2RjWeajKTpCW68hlebmaE+u094aInfxEtYDoxgmpzjicMJ6itLSMqZggM7OTiKR
      CF5veQPObDbjcrlYWFigublcM9br9TI/X35q3Xv6f/TRR6RSKVwuF2+99RbLy8ucPHkSi8XC
      8ePH8fv9nDt3jjt37uB0Onn//fcRRZF0Ok2hUMBoNFbq9cbjcQqFAj6fD5PJhKIoJBIJCoUC
      ra2tCIJAKpWq1Pp1uR62dvZkM9YZaEg/LmsDi1LvEE0H6OjqwTn8AouaJ8RUzp38M5r6jpCc
      v4EiywwffR2nxYCAzKER30Y7AXv7fvKBWZTiMn6vicHBEIspB96glf2DTQAUiyWUUomifH+j
      pFgqkf34Y1I/+zkAosNO+Pf/Ewv//j9U2jT/vb+Lffww9jt3ebu9g8y581hHhjFYrTQ1NVWe
      5sViEZ/Px8LCAm63m1KpBIDL5UIQBFpaWigWi9hsNoxGI36/H7PZTLFYpKWlhaWlJZqbmymV
      SgiCwOnTp4nFYvj9fk6cOIEsy/z85z9HURR6e3sZHx9nZmaGM2fOYLFYeOedd/B4PJw+fZpE
      IkEwGOSNN97Q3AlXFKVmI1BRlJrd8gdlgiBgMj3aG6mvpzFpUaxPogOsL93lwz/+v7QEWujd
      f7RGITZ3k3RexZpZI1uy0dcqMHOnHAqhGM6RnvvBRksRp/I6uZmfImdvAWBw7MPW9XskIj8k
      sdHKHPwOrEok8vcT5kuLC+RjMbIbMgGQ5+ZYeaBNbnUF8cxZkt//w4rM+8//KatOB/F8DmMo
      yKnLFxnwtjAdj1FEAZuFzyauEna5iUQiOBwOJicncTqdrK6uIggCS0tLTE5O4vP5uHr1KoIg
      EIlECAQCleryAJIkEYmU4+5zuVylynwkEqFYLKKqKqlUirW1NZLJZEVWKpWIRCJIksTJkydp
      b29naGgIk8nE5OQk2WwWj8dDb28vgiDw6aef4nA4CAQClZWvU6dO4fP5GBgYwOfz0d5+P0Hs
      o2BqrTFnv3OPIEnww6hxAHewi0Oj/dyYWUSWa7ev8yUBX7OTVKaIlE+wsirQ9uKL+N0WAtmr
      FOV7C5wi3v5+1osepHRZZnQ34errIx63VfqztQfB2sHKA3PsYGcX2fkFUhsywW6nrbcXywNt
      mkMhDJ4mVh+QtXZ1cW09zq+iawA4zRbeO3KUH398mpVM+XDEoVAbr/b1EdqoKF4qSTisVjq6
      uxkdO4QkSZiMJuxmM+HOTlRUSiUJm8WCxWisrDZlMhn6+/uRZZn5+XlsNhuiKNLf38/MzAxD
      Q0MoikIoFMLj8RCNRrHZbOTz+YpeoVDA7/fjcDjweDxYLBZMJhPpdJqenh4MBgOlUolQKEQs
      FqOnpwdBEMhkMnR0dJDP5yu76To7Q3MKFEtkOPzKq3gDtWvt4Z4BAm0dSKoBpZihKIt4XFu8
      yT6hpAp5/s0vTlZ+/1ujB7kdW+XC/BwAPrudf/bam/z+2V+yXiiPOuPtnXx75ACHjpRXxkol
      CUmRUYHDx46iKArqRurtUEc7gbZwxZlkRanoSZKEpCigqty4cYPZ2VmCwSDj4+Mkk0mmpqYQ
      RZFwOIzdbmdhYYGpqSnsdjs9PeWIy4WFBWZnZ7HZbI/VAT77n/+F8IExjFYrZruTzOoy3p4+
      TDYHa7dvIhqMWFwuFq9cpG3sZQRRRJVlHC0BTDbbwy/wCNB0gKF9Q0TjcRwe7bme0WwtK1qa
      ePrSR+2c1Uya/3jmF5Xff+fFMfKlEj+6dj+C8l/+2tt8OPElV5fKJ51CLje/PXqQ//zJR5U2
      f3/sCPsCQd5//32MRmNlpB0aGmJwcJBsNovVWo6vOnbsGDabjUQiUdE/fvw4NpuNeDy+l1/3
      oeTiMRavXkbK52ju7CG9skQ2tkZ6ZQlHi5/oxBV8vf0YTGbmLnyGIIqIBgOi0cTQ2998rLbf
      Q9MBZm7dwtzczlIkQldHSKuJzi45NxfhlzPTld9/75Wv85Opa9yJx4Cy4/ztgy/xB5c+R96o
      UHG0o4vuZi9/fOVSRe+3Rw/S2dT8aI3fYPgb30aRJQwmE+mVZXz9Q6iKgn9omFR0gRfe/RZy
      sYBoMmGyWBFEA4VMGnfr/VHrd4cHt309r81C2Lm9dJUus3lbbTUdwGGzcvniZ7z85re2bZxO
      fWRLpcp7CYCqQjKfq8isG3FSq5lMecoEZIpFSopcpVfSeE97VASHRys/B16o/qylb3s39q+W
      G3eA//W2br6Mz9WlU3Ma5e6188yvS7S3BlBVpWHG6eg8idSMAMtLMczZGGpLF95m9+OwSWcX
      HOsO4rGb96z/4UAzny2v7Fn/j5oaB9h36CVaewYAcLqfrvTgOrCQyXBu45zFXtDk2DvnehzU
      OEBJhkBrCIu1wUVsdXSeQGoc4OJHf8nU9Dz+1gB9o0cZe3Go6vN0fInZu3O4WrvJLt8lX5R5
      4dBhzIZnN8JS59ml5iX4zd/8XV4e34+KgD9YezzR5nCjFtPE1xZZXMnRZJWYmV0hmYgD1ZnW
      FUWplqhlWZVoIyamWqbUyLT0lM16ymY9taz3gEy9J6vR24mdtTJFUdncWY2dW32/TYnqNW1Q
      NunpNQ53heYyaLZo4De+820uXPiSjtZjVZ/JCvSN7OfTs+dQsVDIC1h85vIRSp3ngm8Ndj68
      0Tbw2a3wePfytB2gNeDmxz/4IUfeeK/ms2IuzfJKjLFXjpONRylIIp2tnnIEY7Z6GiSKYnWt
      WIGayEZBEGDTARVBEGsOrWjpiZv1xM16QlnvAZlwT1aj93A7N9ukJRPFzd9Hw86tvt+mWaSm
      DeImvcdwuOcnNxqzdj/ke/yJs7TDoQdfZODF2khQAGezH2dzeWrkdvZottHReVrQdIC//tGf
      EB7YRyDcTUfbo6swrvP8MeJtXBocxw7ORWg6wOihF1lK5hH09yudPWYi1rhNNb+t/mOrmg4w
      feMWVl8bC3fv0N6ujwBPE51Ndl7t2rtC1p1Nz1b8r6YDuJxWLl34jKNv/cajtkdnl0iqRF6t
      7yx3vf3vBbIk8cP/+t/xhVrZN34Yi83G2mIUg9FAU0sLmVSKm5e/4Oi777AyP8/crWn6D+yn
      dZepcDQdoFQs4nK7a9ahdXT2iuRajGBHB3PT00ilEnevT9ESDmG2Wshnc/jDYRIrq/zhv/53
      BDs7EESBdCLJu3+nwQ4wPXGJm3eiDI8OE52dg/0Du7qAjs52aA74URQFu9NJW28vbX29mMxm
      DEYjuXQGQRRo7e5k5OUjpJNJPC2+huR3qj0T7PXz2ptvkkqlGe2t3fBIx5eI3IngDHSTWb5D
      oSiz76UjWIx6nn+dnSMIAm/81m/uup8el+/hjR6gxgH8oXYunvnfFAQLoq2J9nB1Dhhnc5Cu
      YoqrkRkKKYmeoMjtyDJ+p4DfUb1sJMvyplAIjTAEVak5d1Ab0gDyJj1FURE0wgk2h0LIslwl
      U7Vs2KSnqtQkBNDWqw1z2Bx6gUboRdlOLVnt32+zDbWhEPo09UFmUmt1tdd8bKdTSdKpFIVC
      qeazYjbJ5evzjB0cRi7lyWZyOJ0ObHbH5g1djSFKK9u0gLB5C1SokWjvwmq00ZRVbcwK1Gy5
      bpIJWtfTtKFmE3tjZ7taU9v27clqjdgs0oMQd4N2ZjiTjd6eQXwaW9X5XJ5QW5hEosD+0X7y
      kki737ntUAitm6E2FKJWVhtOsJ2+7oU9VN/coqhx8z0kFEIzVfyWN+1X38hbf+fq7mtCIbZw
      Jp2do+kA3X29RFdjuP21y2luXxC3797eQH3zLZ1ng2c+GM7T3IIimojM3GF4SI/3eZrw2xyM
      eB/ebjf9/yQ225C+XmzdQ0O3iaYDzE5PEokmOPDKiUdtj84u+dFH1/iDvzi/Z/3/g3cPg6dx
      K35PXCzQjYtnuLOwxspChKWVGNDbCNt0niNURSEdi+FqeXhIxhMXC9TWO4jr2g1Cr77H8a8d
      aohhOs8+p777P7A6nWSTSfqPvExsfh5RFGkdGGR9ZZmhY197JHY0metLuVgzls3evE66oJBc
      usPEtVsNM0zn2UaRZZpbw7h8PuYnrxOdvkkqtsbMxQvc+PTs4zZvS2pGgBfGj/PC+HGttjo6
      W3Lkg28jlyTah4fLtduKRQwmE3KpRHZ96yJ1jSZRrK86Tt11govZJJ9//Dnjb5/g5oVfUSzJ
      DB8+htWkh0I8z3gCW4fN++h4hJbUR913rdHixKgUkaV1YusqAbeR6btRFudmNbfyq6MCVI3t
      fUU7VGCTbLOeomiEGMjbC4WQZa3rPSQUQqm1U1WUmlAEWcOG7X6/h4VCKKqComG7zs6pewQQ
      DYby7qNoQipmSaWgudWDz2VC2BQqXnPQW9A4kK510FvUOmyupSdualMbGCDWHHgXanaCxU27
      vMI2r1c+3L7ZhtqD+TW7t1t8v20lAqg50K/vBO+GHUyBUgT6+kmvZTk4to+8JBLy2sv/PGl7
      8TqbJNTEALBFqEDV77VatcE5Qk1oglZMT01nGmEWWvFJaNigFZlQG1f08O+3td5mE3QH2A11
      O4DZ7qJn4Omucqijcw/9zVXnuabuEUDnyebXjwzxUv/e1Q0Le12UGpQHNuiw8Xpbd0P6Amiy
      WBlrqW/FSXeAZ4yw103Y+/TUdbhXCadRmA31Za3YxdVVrnz+CaWSwvCRr2HT9wF0nkJ2ftdK
      SRIZA8FmM3OLjzmoW0dnh+zcAUQLUiHNejKFy/VsJUvSeX7Y+RRItPHS4f3kJJFgk15NRufp
      pMoBrEZDXcrW1jYAsrkcs7OzBDr8iI6RjU9FZFlGsPYgquVVA8HShayoD7QBjD6w2zAN3a9E
      o5rNiC0tFZlgtaBAVRs8HnA6qvWMRrxWG12eJgDsJjOyLBN2urBvvGz5bHYElUobALvRiM9q
      r8g8ViuyLNPudpMplp3ba7VhEIRqPYMRA9V9oar47ff78tkdGDfpWQwGXCZzlUxVFAJ2BwVP
      ORFB0OlClmU6PU2VjBgeiwWzIFbpmTefXdapC0HdHICyC+YWk1VpUEQBNmXx2JZsu3qCUJ2B
      ZKfXu7eoV6/tm6+/13paMrNJJNiib0zulIY+Ph78X6XWkzX/vFI+QzpfnWpFLuWJzM5X3RDV
      eipLC3eJzC/UXu+BdoVcivmFRVKpVFWbB/tSpCLJ5HqVLLWeRJZLrKfvF5+WinkWFpc2Vyyq
      0outrbKeTH5lG1BYmJ1hLRZHUhRK+Qz5olRz84PCXGSG7EYamnRqXaMvrf71rBC7Zc/2Aaam
      JugMtDC9sIyiyNjNIrGVFToOvMZg+/2jclcvnaO9f5gvzv+SfBEKkoKgSji9YcYOjAACJjlD
      rGjjb/7qZ9jdHkxmC1I+h9UM9pZ+BrrDXLl8kf7+Qc589NeE27pYiyewGRS84T6G+svHOpdm
      bzIRidFslVAUWF1LYrLZcZtBdbTy8tgBANZX55m6vUjk1hfIog1JVkitJ+kMNWPwdLGvr5NP
      Tv0YXG20eozkJBOCwcB6Ik445KdUyGM02Wjt3cfEhU8wOAM4mz04xSIzixmam6yU8mkC7cPs
      G+wBZK5f/hTF3ExJho6Qm2TBgJBZZXD8Tfzu+k456WyfPZtA2i0mllbXEAQBp8eHSQST1YFS
      yBBL3F829ftbmF+YI18skk0lkBSw2t10tN3fzTRa7JjUIrIKBosbu0kB0Ui+UEKWyk9Nb3MT
      0ZVVOrv7yCRWEESRJl8QKZ9iZWWZkqyQTOfxOYysxtcRBZFwZz+BFi+CwYjFoLK6uoqsqBjM
      dmwmmWxRQlJFvM1NBIMhcrk8ily+3sD+w3hsRgpFCRkD3iYPrcFWFEXFaDSRjK8CAqHOXqxG
      EVQVk8VOe6sfo72JYDiEqNwLdxZoagnhsJjoHhjCKAj4vc0UZQVJqg6J1mksDX0HmF1M7kq/
      kEuD0YbFVN/LeL2k1pO43I+/PlUjsJgNBHx6QfOd8tiXENYW73JtcgoFsNicGze/ysL83J5d
      86tufkXKc/WL88TWs6Tjy6znig299sJcBFlrcq/zWPj/S/YgP3TEQGwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      eG7r/ZPv/wO/KtwyaErKpAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      +NoE9g94AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      ELKaCICQ1f4/MESOt2nmqKoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
